/**
 * 
 */
package com.maf.hotels.service;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.graalvm.compiler.core.common.type.TypeReference;

import com.github.lbovolini.mapper.ObjectMapper;
import com.maf.hotels.model.BestHotels;
import com.maf.hotels.util.HttpRequestHelper;

/**
 * @author Bashar
 *
 */
public class AvailableHotelsService {
	
	/**
	 * This method used to collect the parameters from the request and send http request to crazy hotel API.
	 * @param request
	 * @return
	 */
	public String sendBestHotelsRequest(HttpServletRequest request) {
		System.out.println("AvailableHotels.sendBestHotelsRequest()");
		// Read the request parameters
		StringBuilder sb = new StringBuilder();
		int adultsCount = 0;
		Date fromDate = null;
		Date toDate = null;
		String city = request.getParameter("city");
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

		// Using try catch here in case any failure in parsing integer or dates.
		try {
			String dateFromStr = request.getParameter("fromDate");
			String toDateStr = request.getParameter("toDate");

			fromDate = sdf.parse(dateFromStr);
			toDate = sdf.parse(toDateStr);
			adultsCount = Integer.parseInt(request.getParameter("numberOfAdults"));
		} catch (ParseException e) {
			e.printStackTrace();
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		sb.append("city").append("=").append(city)
		.append("&")
		.append("fromDate").append("=").append(sdf.format(fromDate))
		.append("&")
		.append("toDate").append("=").append(sdf.format(toDate))
		.append("&")
		.append("numberOfAdults").append("=").append(adultsCount);
		
		System.out.println("Request parameters: ");
		System.out.println("- City: " + city);
		System.out.println("- From date: " + sdf.format(fromDate));
		System.out.println("- To date: " + sdf.format(toDate));
		System.out.println("- Adults count: " + adultsCount);
		
		
		String url = "http://localhost:8083/BestHotels/Hotels?";
		
		String response = HttpRequestHelper.sendHttpPost(url, sb.toString());
		System.out.println("Response :: " + response);
		
		ObjectMapper mapper = new ObjectMapper();
		List<BestHotels> participantJsonList = mapper.readValue(response, new TypeReference<List<BestHotels>>(){});
		
		return response;

	}
		
	/**
	 * This method used to collect the parameters from the request and send http request to crazy hotel API.
	 * @param request
	 * @return
	 */
	public String sendCrazyHotelsRequest(HttpServletRequest request) {

		System.out.println("AvailableHotels.sendCrazyHotelsRequest()");
		// Read the request parameters
		StringBuilder sb = new StringBuilder();
		int adultsCount = 0;
		Date fromDate = null;
		Date toDate = null;
		String city = request.getParameter("city");
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

		// Using try catch here in case any failure in parsing integer or dates.
		try {
			String dateFromStr = request.getParameter("fromDate");
			String toDateStr = request.getParameter("toDate");

			fromDate = sdf.parse(dateFromStr);
			toDate = sdf.parse(toDateStr);
			adultsCount = Integer.parseInt(request.getParameter("numberOfAdults"));
		} catch (ParseException e) {
			e.printStackTrace();
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		sb.append("city").append("=").append(city)
		.append("&")
		.append("from").append("=").append(sdf.format(fromDate))
		.append("&")
		.append("To").append("=").append(sdf.format(toDate))
		.append("&")
		.append("adultsCount").append("=").append(adultsCount);
		
		System.out.println("Request parameters: ");
		System.out.println("- City: " + city);
		System.out.println("- From date: " + sdf.format(fromDate));
		System.out.println("- To date: " + sdf.format(toDate));
		System.out.println("- Adults count: " + adultsCount);
		
		
		String url = "http://localhost:8082/CrazyHotels/Hotels?";
		
		String response = HttpRequestHelper.sendHttpPost(url, sb.toString());
		System.out.println("Response :: " + response);
		
		return response;

	}

}
